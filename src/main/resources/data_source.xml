<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:osgi="http://www.springframework.org/schema/osgi"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
    <!-- prop load -->
    <bean id="placeholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/ds/datasource.properties</value>
			</list>
		</property>
	</bean>
	<!-- datasource -->
	<bean class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" id="dataSource">
		<property name="driverClassName" value="org.h2.Driver" />
		<property name="url" value="jdbc:h2:mem:member" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>
	<jdbc:embedded-database id="dataSource" type="H2">
	    <jdbc:script location="classpath:/ds/h2/h2_schema.sql"/>
	    <jdbc:script location="classpath:/ds/h2/h2_datas.sql"/>
	</jdbc:embedded-database>  
	<!-- session-factory -->
	<bean id="abstractSessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource">
            <ref local="dataSource"/>
        </property>
         <property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect"> ${hibernate.dialect} </prop>
				<prop key="hibernate.show_sql"> ${hibernate.show_sql} </prop>
				<prop key="hibernate.jdbc.fetch_size"> ${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.jdbc.batch_size"> ${hibernate.jdbc.batch_size} </prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.connection.autocommit">${hibernate.connection.autocommit}</prop> 
       			<prop key="hibernate.current_session_context_class">${hibernate.current_session_context_class}</prop> 
       			<prop key="hibernate.connection.release_mode">${hibernate.connection.release_mode}</prop>
       			<prop key="javax.persistence.validation.mode">none</prop>
       			<prop key="hibernate.validator.apply_to_ddl">false</prop>
       			<prop key="hibernate.validator.autoregister_listeners">false</prop>
			</props>
		</property>
    </bean>
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" parent="abstractSessionFactory">
        <property name="packagesToScan" value="cn.kane.entity"/>
    </bean>
    <!-- transaction manager -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<tx:annotation-driven />
	<!-- Transactional advice -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="create*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="remove*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<!-- aop config -->
	<aop:config>
		<aop:pointcut id="serviceOperation"	expression="execution(* cn.kane.service..*.*Service*.*(..)) " />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />
	</aop:config>
    
	<!-- dao-scan -->
	<context:component-scan base-package="cn.kane.dao"/>
</beans>